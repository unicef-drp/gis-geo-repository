FROM python:3.10.4-buster AS prod

# Enable postgresql-client-14
RUN echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" | tee /etc/apt/sources.list.d/pgdg.list
RUN echo "deb http://deb.debian.org/debian/ stable main contrib non-free" | tee /etc/apt/sources.list.d/debian.list
RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -

RUN apt-get update -y && apt-get upgrade -y

RUN apt-get install -y --no-install-recommends \
    gcc gettext geoip-bin cron \
    postgresql-client-14 \
    spatialite-bin libsqlite3-mod-spatialite \
    python3-dev python3-gdal python3-psycopg2 python3-ldap \
    python3-pip python3-pil python3-lxml python3-pylibmc \
    uwsgi uwsgi-plugin-python3

# Install pip packages
ADD deployment/docker/requirements.txt /requirements.txt
RUN pip3 install --upgrade pip && pip install --upgrade pip
RUN pip install -r /requirements.txt

RUN curl -sL https://deb.nodesource.com/setup_16.x -o nodesource_setup.sh
RUN bash nodesource_setup.sh
RUN apt-get install nodejs -y

# Tegola
RUN wget https://github.com/go-spatial/tegola/releases/download/v0.15.2/tegola_linux_amd64.zip -P /home/web/
RUN unzip /home/web/tegola_linux_amd64.zip -d /opt/

ADD django_project /home/web/django_project

EXPOSE 8080

ADD deployment/docker/uwsgi.conf /uwsgi.conf

RUN pip install gunicorn==20.1.0
RUN mkdir /var/log/gunicorn/

WORKDIR /home/web/django_project
ENTRYPOINT ["/home/web/django_project/entrypoint.sh"]
CMD ["gunicorn", "-c", "/home/web/django_project/config/gunicorn/dev.py"]
